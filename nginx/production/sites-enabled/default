proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=nuxt-cache:25m max_size=1g inactive=60m use_temp_path=off;
proxy_cache_path  /var/cache/nginxapi levels=1:2 keys_zone=api-cache:60m max_size=1g inactive=60m use_temp_path=off;
proxy_cache_path  /var/cache/nginxuserapi levels=1:2 keys_zone=api-user-cache:25m max_size=1g inactive=60m use_temp_path=off;

map $sent_http_content_type $expires {
    "text/html"                 epoch; # set this to your needs
    "text/html; charset=utf-8"  epoch; # set this to your needs
    "text/css"                  max; # set this to your needs
    "application/javascript"    max; # set this to your needs
    default                     off; # set this to your needs
}

map $http_authorization $block_public_auth {
  default 1;
  "jjk37Gj34HKVvd8234gFcvKqw67fAw" 0;
}

server {
    listen       80;
    server_name  fitnesstgbot.ru www.fitnesstgbot.ru;
    location /.well-known/acme-challenge/ {
               root /var/www/certbot;
        }

#    return       301 https://fitnesstgbot$request_uri;
}



#### CRM

server {
    listen       443 ssl http2;
    server_name  www.fitnesstgbot.ru;
    ssl_certificate /etc/letsencrypt/live/fitnesstgbot.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fitnesstgbot.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    return       301 https://fitnesstgbot.ru$request_uri;
}


server {
    listen 443 ssl http2;
    server_name  fitnesstgbot.ru;
    ssl_certificate /etc/letsencrypt/live/fitnesstgbot.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fitnesstgbot.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    root /var/www;

    location ~* \.(?:ico|gif|jpe?g|png|webp|woff2?|eot|otf|ttf|svg|js|css|apk|mp4)$ {
        expires 7d;
        add_header  X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
        add_header Pragma public;
        add_header Cache-Control "public";
        access_log off;
        try_files $uri $uri/ @front;
    }

    location /api/ {
        if ($block_public_auth) {
            return 403;
        }
        try_files $uri @api;
    }


    location / {
        expires $expires;
#        add_header X-Frame-Options "SAMEORIGIN";
        proxy_pass http://frontend:3000; # set the adress of the Node.js instance here
    }

    location @front{
        expires $expires;
        add_header  X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Cache-Status $upstream_cache_status;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-NginX-Proxy true;
        proxy_ignore_headers                Cache-Control;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout                  1m;
        proxy_connect_timeout               1m;
        proxy_pass                          http://frontend:3000; # set the adress of the Node.js instance here
        proxy_cache                         nuxt-cache;
        proxy_cache_bypass                  $http_upgrade $arg_nocache $cookie_nocache $cookie_session; # probably better to change this
        proxy_no_cache                      $arg_nocache $cookie_nocache $cookie_session;
        proxy_cache_valid                   200 302  60m; # set this to your needs
        proxy_cache_valid                   404      1m;  # set this to your needs
        proxy_cache_lock                    on;
        proxy_cache_use_stale error         timeout http_500 http_502 http_503 http_504;
        proxy_cache_key                     $uri$is_args$args;
    }

  location @api {
        access_log /var/log/nginx/api.access.log;
        error_log  /var/log/nginx/api.error.log warn;
        expires -1;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Cache-Status $upstream_cache_status;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_cache                         api-cache;
        proxy_ignore_headers                Cache-Control;
        proxy_read_timeout                  1m;
        proxy_connect_timeout               1m;
        proxy_pass                          http://backend:4000; # set the adress of the Node.js instance here
  }
}